/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 *
 * SPDX-License-Identifier: MIT
 */

#ifndef MFRAME_B4E61D80_F9A1_469D_84FD_FBB3D8FC11E4
#define MFRAME_B4E61D80_F9A1_469D_84FD_FBB3D8FC11E4

/* ******************************************************************************
 * Include
 */

//-------------------------------------------------------------------------------
#include "./../lang/Interface.h"
#include "./../lang/Iterable.h"

/* ******************************************************************************
 * Namespace
 */
namespace util {
  template <class T>
  struct Collection;
}

/* ******************************************************************************
 * Class/Interface/Struct
 */
template <class T>
struct util::Collection : public virtual lang::Iterable<T> {
  /* ****************************************************************************
   * Variable <Public>
   */

  /* ****************************************************************************
   * Variable <Protected>
   */

  /* ****************************************************************************
   * Variable <Private>
   */

  /* ****************************************************************************
   * Abstract method <Public>
   */

  /**
   * @brief 從此集合中刪除所有元素(可選操作)。此方法返回後，集合將為空。
   *
   */
  virtual void clear(void) abstract;

  /**
   * @brief 如果此集合不包含元素，則返回true。
   *
   * @return
   * true如果此集合不包含元素
   */
  virtual bool isEmpty(void) const abstract;

  /**
   * @brief 返回此集合中的元素數。
   *
   * 如果此收藏包含超過 Integer.MAX_VALUE個元素，則返回Integer.MAX_VALUE。
   *
   * @return uint32_t - 此集合中的元素数
   */
  virtual int size(void) const abstract;

  /* ****************************************************************************
   * Abstract method <Protected>
   */

  /* ****************************************************************************
   * Construct Method
   */

  /* ****************************************************************************
   * Operator Method
   */

  /* ****************************************************************************
   * Public Method <Static>
   */

  /* ****************************************************************************
   * Public Method <Override>
   */

  /* ****************************************************************************
   * Public Method
   */

  /* ****************************************************************************
   * Protected Method <Static>
   */

  /* ****************************************************************************
   * Protected Method <Override>
   */

  /* ****************************************************************************
   * Protected Method
   */

  /* ****************************************************************************
   * Private Method <Static>
   */

  /* ****************************************************************************
   * Private Method <Override>
   */

  /* ****************************************************************************
   * Private Method
   */
};

/* *******************************************************************************
 * End of file
 */

#endif /* MFRAME_.B4E61D80_F9A1_469D_84FD_FBB3D8FC11E4 */
